/* **********************************************************************************************
*  Macro SCSASCode: Modified from Credit Risk Scorecards: Development and 
*	Implementation using SAS. It writes the scorecard generated by the scorecard dataset 
*    to an output file FileName generating SAS code
*  params:
*  		scdn: the name of the scorecard dataset created by macro ScordCard
* 		basepoints: base score
* 		baseodds: odds ratio at the base point
* 		pdo: score of ratio doubling
* 		filename: name of output scorecard SAS file
* 		intopt: controls the representation of the scorecard score: 
*  			if 1, then generates an integer score, otherwise a floating score
* **********************************************************************************************/
%macro SCSasCode(scdn, basepoints, baseodds, pdo, filename, IntOpt);
	
	proc sort data=&scdn;
		by model_item bin;
	run;

	data _null_;
		set &scdn nobs=nx;
		by model_item bin;
		file "&pout.&filename..sas";
		length cond $300.;
		length value $300.;

		if _N_ =1 then do;
			put '/***** Automatically Generated Scorecard Code*****/';
			put;
			put '/* Scorecard Scale : ';
			put "/*   Odds of [ 1 : &BaseOdds ] at  [ &BasePoints ] Points with PDO of [ 20 ] */ ";

			put '/********** START OF SCORING DATA STEP *******/';
			put;
			put 'data ;       ';
			put '	set ; ';
			put '/*********************************************/';
		end; 

		/* ***  print the dataset RulesDS   ***** */
		%if &IntOpt=1 %then xPoints=int(Points);
		%else xPoints=Points; ;

		if upcase(model_item)="INTERCEPT" then do;
			put '/***************Base Points********************/';
			put "Points=" xPoints ";";
		end;
		else do;
		if first.model_item then do;
			put "/***********  Variable : " ori_var "    *************/";
		end;
		value= "  then  Points=Points +("||compress(xPoints)||");";

		/* *********  The rule   ***************/
		if not missing(border) then  do;/* continuous */
			if last.model_item then cond='IF '||compress(ori_var)||' GT ('|| compress(border)||')';
			else cond='IF '||compress(ori_var)||' LE ('||compress(border) || ') ';  
		end; 
		else if not missing(ori_val) then /* cluster nominal */
			cond = 'IF '||compress(ori_var)||' in ( '|| compbl(ori_val) ||')' ; 
		else /* nominal */
			cond='IF '||compress(ori_var)||' = ('|| compress(bin)||') '; 
			put "      " cond value;
		end;

		if _N_=Nx then do;
			put 'run;'; 
			put;
			put '/*************END OF SCORING DATA STEP *******/';
		end;
	run;
	%put NOTE: == File &pout.&filename..sas was created ==;
	%put NOTE: == Macro SCSasCode running completed ==;
%mend;

